{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "1313a5bc6bba4ae988cedda5796d703b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DropdownModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DropdownModel",
            "_options_labels": [
              "M Chinnaswamy Stadium",
              "Punjab Cricket Association Stadium, Mohali",
              "Feroz Shah Kotla",
              "Wankhede Stadium",
              "Eden Gardens",
              "Sawai Mansingh Stadium",
              "Rajiv Gandhi International Stadium, Uppal",
              "MA Chidambaram Stadium, Chepauk",
              "Dr DY Patil Sports Academy",
              "Newlands",
              "St George's Park",
              "Kingsmead",
              "SuperSport Park",
              "Buffalo Park",
              "New Wanderers Stadium",
              "De Beers Diamond Oval",
              "OUTsurance Oval",
              "Brabourne Stadium",
              "Sardar Patel Stadium, Motera",
              "Barabati Stadium",
              "Vidarbha Cricket Association Stadium, Jamtha",
              "Himachal Pradesh Cricket Association Stadium",
              "Nehru Stadium",
              "Holkar Cricket Stadium",
              "Dr. Y.S. Rajasekhara Reddy ACA-VDCA Cricket Stadium",
              "Subrata Roy Sahara Stadium",
              "Shaheed Veer Narayan Singh International Stadium",
              "JSCA International Stadium Complex",
              "Sheikh Zayed Stadium",
              "Sharjah Cricket Stadium",
              "Dubai International Cricket Stadium",
              "Maharashtra Cricket Association Stadium",
              "Punjab Cricket Association IS Bindra Stadium, Mohali",
              "Saurashtra Cricket Association Stadium",
              "Green Park"
            ],
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "DropdownView",
            "description": "Select Venue:",
            "description_tooltip": null,
            "disabled": false,
            "index": 8,
            "layout": "IPY_MODEL_4120b502061547bba4ace2d22da7bc0a",
            "style": "IPY_MODEL_1b85dc29ba2d4f2892d822d9e7378d2d"
          }
        },
        "4120b502061547bba4ace2d22da7bc0a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "1b85dc29ba2d4f2892d822d9e7378d2d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "4b4be5467e0c4561911b98b14c253ce0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DropdownModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DropdownModel",
            "_options_labels": [
              "Kolkata Knight Riders",
              "Chennai Super Kings",
              "Rajasthan Royals",
              "Mumbai Indians",
              "Deccan Chargers",
              "Kings XI Punjab",
              "Royal Challengers Bangalore",
              "Delhi Daredevils",
              "Kochi Tuskers Kerala",
              "Pune Warriors",
              "Sunrisers Hyderabad",
              "Rising Pune Supergiants",
              "Gujarat Lions",
              "Rising Pune Supergiant"
            ],
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "DropdownView",
            "description": "Select Batting Team:",
            "description_tooltip": null,
            "disabled": false,
            "index": 1,
            "layout": "IPY_MODEL_3290d94bcc1445b2a7dcabe16c1a0165",
            "style": "IPY_MODEL_27779fdfa8c949d3ba9b05b50f9df86c"
          }
        },
        "3290d94bcc1445b2a7dcabe16c1a0165": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "27779fdfa8c949d3ba9b05b50f9df86c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "8248ddc34f41481ebd7ece25313f31c4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DropdownModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DropdownModel",
            "_options_labels": [
              "Royal Challengers Bangalore",
              "Kings XI Punjab",
              "Delhi Daredevils",
              "Kolkata Knight Riders",
              "Rajasthan Royals",
              "Mumbai Indians",
              "Chennai Super Kings",
              "Deccan Chargers",
              "Pune Warriors",
              "Kochi Tuskers Kerala",
              "Sunrisers Hyderabad",
              "Rising Pune Supergiants",
              "Gujarat Lions",
              "Rising Pune Supergiant"
            ],
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "DropdownView",
            "description": "Select Bowling Team:",
            "description_tooltip": null,
            "disabled": false,
            "index": 5,
            "layout": "IPY_MODEL_c8dfd4d477b3448c9226c621ef927e33",
            "style": "IPY_MODEL_784e968aa7914b258c55e9e96602f1a3"
          }
        },
        "c8dfd4d477b3448c9226c621ef927e33": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "784e968aa7914b258c55e9e96602f1a3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "f70da900228c4c6981280fe352b2acd0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DropdownModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DropdownModel",
            "_options_labels": [
              "SC Ganguly",
              "BB McCullum",
              "RT Ponting",
              "DJ Hussey",
              "Mohammad Hafeez",
              "PA Patel",
              "ML Hayden",
              "MEK Hussey",
              "MS Dhoni",
              "SK Raina",
              "JDP Oram",
              "S Badrinath",
              "T Kohli",
              "YK Pathan",
              "SR Watson",
              "M Kaif",
              "DS Lehmann",
              "RA Jadeja",
              "M Rawat",
              "D Salunkhe",
              "SK Warne",
              "SK Trivedi",
              "L Ronchi",
              "ST Jayasuriya",
              "DJ Thornely",
              "RV Uthappa",
              "PR Shah",
              "AM Nayar",
              "SM Pollock",
              "Harbhajan Singh",
              "AC Gilchrist",
              "Y Venugopal Rao",
              "VVS Laxman",
              "A Symonds",
              "RG Sharma",
              "SB Styris",
              "AS Yadav",
              "SB Bangar",
              "WPUJC Vaas",
              "RP Singh",
              "K Goel",
              "JR Hopes",
              "KC Sangakkara",
              "DPMD Jayawardene",
              "Yuvraj Singh",
              "IK Pathan",
              "S Sohal",
              "B Lee",
              "PP Chawla",
              "WA Mota",
              "Shahid Afridi",
              "RR Sarwan",
              "S Sreesanth",
              "VRV Singh",
              "S Chanderpaul",
              "R Dravid",
              "LRPL Taylor",
              "JH Kallis",
              "V Kohli",
              "MV Boucher",
              "P Kumar",
              "SB Joshi",
              "Z Khan",
              "R Vinay Kumar",
              "WP Saha",
              "LR Shukla",
              "AB Agarkar",
              "M Kartik",
              "I Sharma",
              "AM Rahane",
              "DJ Bravo",
              "MA Khote",
              "G Gambhir",
              "V Sehwag",
              "S Dhawan",
              "Shoaib Malik",
              "MK Tiwary",
              "KD Karthik",
              "R Bhatia",
              "MF Maharoof",
              "VY Mahesh",
              "DB Das",
              "HH Gibbs",
              "DNT Zoysa",
              "D Kalyankrishna",
              "GC Smith",
              "SA Asnodkar",
              "Sohail Tanvir",
              "SP Fleming",
              "S Vidyut",
              "JA Morkel",
              "LPC Silva",
              "DB Ravi Teja",
              "SE Marsh",
              "YV Takawale",
              "SS Tiwary",
              "RR Raje",
              "Joginder Sharma",
              "MS Gony",
              "M Muralitharan",
              "M Ntini",
              "W Jaffer",
              "CL White",
              "Misbah-ul-Haq",
              "DT Patil",
              "A Kumble",
              "DW Steyn",
              "S Anirudha",
              "MM Patel",
              "AB de Villiers",
              "A Chopra",
              "BJ Hodge",
              "T Taibu",
              "Umar Gul",
              "PP Ojha",
              "SP Goswami",
              "B Akhil",
              "Salman Butt",
              "TM Dilshan",
              "A Mishra",
              "J Arunkumar",
              "Iqbal Abdulla",
              "CK Kapugedera",
              "LA Pomersbach",
              "Shoaib Akhtar",
              "AB Dinda",
              "SR Tendulkar",
              "B Chipli",
              "DR Smith",
              "SD Chitnis",
              "Kamran Akmal",
              "TM Srivastava",
              "MK Pandey",
              "RR Powar",
              "JP Duminy",
              "JD Ryder",
              "KP Pietersen",
              "CH Gayle",
              "MC Henriques",
              "A Flintoff",
              "FH Edwards",
              "PC Valthaty",
              "RJ Quiney",
              "AD Mascarenhas",
              "AS Raut",
              "Pankaj Singh",
              "RS Bopara",
              "DL Vettori",
              "M Manhas",
              "PJ Sangwan",
              "MN van Wyk",
              "AA Bilakhia",
              "TL Suman",
              "Shoaib Ahmed",
              "GR Napier",
              "R Bishnoi",
              "RE van der Merwe",
              "KP Appanna",
              "M Vijay",
              "SB Jakati",
              "L Balaji",
              "NV Ojha",
              "LA Carseldine",
              "RJ Harris",
              "D du Preez",
              "DS Kulkarni",
              "SM Harwood",
              "Yashpal Singh",
              "AN Ghosh",
              "AD Mathews",
              "SM Katich",
              "DA Warner",
              "J Botha",
              "A Nehra",
              "Mashrafe Mortaza",
              "GJ Bailey",
              "AB McDonald",
              "Y Nagar",
              "Niraj Patel",
              "T Henderson",
              "A Singh",
              "R Ashwin",
              "T Thushara",
              "Mohammad Ashraful",
              "CA Pujara",
              "OA Shah",
              "AP Tare",
              "AT Rayudu",
              "R Sathish",
              "R McLaren",
              "MS Bisla",
              "YA Abdulla",
              "EJG Morgan",
              "AA Jhunjhunwala",
              "P Dogra",
              "A Uniyal",
              "KA Pollard",
              "MJ Lumb",
              "DR Martyn",
              "S Narwal",
              "M Morkel",
              "Anirudh Singh",
              "Jaskaran Singh",
              "FY Fazal",
              "AC Voges",
              "MD Mishra",
              "J Theron",
              "R Sharma",
              "Mandeep Singh",
              "KM Jadhav",
              "SW Tait",
              "PD Collingwood",
              "VS Malik",
              "SJ Srivastava",
              "AP Dole",
              "Bipul Sharma",
              "DE Bollinger",
              "BAW Mendis",
              "B Sumanth",
              "C Madan",
              "AG Paunikar",
              "AJ Finch",
              "MR Marsh",
              "STR Binny",
              "IR Jaggi",
              "DT Christian",
              "RV Gomez",
              "UBT Chand",
              "UT Yadav",
              "Sunny Singh",
              "NJ Rimmington",
              "MA Agarwal",
              "AUK Pathan",
              "AL Menaria",
              "DJ Jacobs",
              "WD Parnell",
              "TD Paine",
              "SB Wagh",
              "AC Thomas",
              "BJ Haddin",
              "NLTC Perera",
              "MS Wade",
              "JE Taylor",
              "RN ten Doeschate",
              "SL Malinga",
              "AG Murtaza",
              "TR Birt",
              "Harpreet Singh",
              "NL McCullum",
              "DH Yagnik",
              "AC Blizzard",
              "M Klinger",
              "I Malhotra",
              "A Mithun",
              "P Parameswaran",
              "AA Chavan",
              "ND Doshi",
              "CJ Ferguson",
              "B Kumar",
              "S Rana",
              "JEC Franklin",
              "Shakib Al Hasan",
              "F du Plessis",
              "SPD Smith",
              "MN Samuels",
              "KK Cooper",
              "HV Patel",
              "Ankit Sharma",
              "RE Levi",
              "RR Bhatkal",
              "Harmeet Singh",
              "BA Bhatt",
              "CJ McKay",
              "DJ Harris",
              "N Saini",
              "DA Miller",
              "Azhar Mahmood",
              "A Ashish Reddy",
              "V Pratap Singh",
              "BB Samantray",
              "RJ Peterson",
              "S Nadeem",
              "VR Aaron",
              "MJ Clarke",
              "AP Majumdar",
              "Gurkeerat Singh",
              "P Awana",
              "SP Narine",
              "A Chandila",
              "PA Reddy",
              "MC Juneja",
              "AD Russell",
              "KK Nair",
              "KB Arun Karthik",
              "GH Vihari",
              "MDKJ Perera",
              "R Shukla",
              "JD Unadkat",
              "M Vohra",
              "JP Faulkner",
              "R Rampaul",
              "BJ Rohrer",
              "Q de Kock",
              "KV Sharma",
              "SMSM Senanayake",
              "LJ Wright",
              "X Thalaivan Sargunam",
              "DJG Sammy",
              "MG Johnson",
              "A Mukund",
              "SV Samson",
              "BMAJ Mendis",
              "KL Rahul",
              "CM Gautam",
              "KW Richardson",
              "Parvez Rasool",
              "GJ Maxwell",
              "R Dhawan",
              "SA Yadav",
              "CJ Anderson",
              "JJ Bumrah",
              "CA Lynn",
              "MA Starc",
              "AR Patel",
              "Sandeep Sharma",
              "BR Dunk",
              "Shivam Sharma",
              "LMP Simmons",
              "VH Zol",
              "BCJ Cutting",
              "Mohammed Shami",
              "BE Hendricks",
              "S Gopal",
              "M de Lange",
              "RR Rossouw",
              "JO Holder",
              "JDS Neesham",
              "Imran Tahir",
              "MM Sharma",
              "DJ Hooda",
              "CH Morris",
              "SS Iyer",
              "SA Abbott",
              "AN Ahmed",
              "YS Chahal",
              "J Suchith",
              "P Negi",
              "RG More",
              "Anureet Singh",
              "HH Pandya",
              "NM Coulter-Nile",
              "PV Tambe",
              "MJ McClenaghan",
              "DJ Muthuswami",
              "SN Thakur",
              "SN Khan",
              "D Wiese",
              "S Aravind",
              "JC Buttler",
              "CR Brathwaite",
              "MP Stoinis",
              "C Munro",
              "P Sahu",
              "KH Pandya",
              "TG Southee",
              "MJ Guptill",
              "KJ Abbott",
              "TM Head",
              "AD Nath",
              "NS Naik",
              "Ishan Kishan",
              "SW Billings",
              "RR Pant",
              "KS Williamson",
              "KC Cariappa",
              "PSP Handscomb",
              "Sachin Baby",
              "J Yadav",
              "UT Khawaja",
              "HM Amla",
              "BB Sran",
              "N Rana",
              "F Behardien",
              "ER Dwivedi",
              "JJ Roy",
              "BA Stokes",
              "Vishnu Vinod",
              "TS Mills",
              "Basil Thampi",
              "CR Woakes",
              "V Shankar",
              "Rashid Khan",
              "RA Tripathi",
              "RD Chahar",
              "LH Ferguson",
              "C de Grandhomme",
              "PJ Cummins",
              "Mohammad Nabi",
              "Kuldeep Yadav",
              "Washington Sundar",
              "S Badree",
              "A Choudhary",
              "AR Bawne",
              "AJ Tye",
              "Ankit Soni",
              "K Rabada",
              "AF Milne",
              "SP Jackson",
              "Swapnil Singh",
              "R Tewatia",
              "AS Rajpoot"
            ],
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "DropdownView",
            "description": "Select Striker:",
            "description_tooltip": null,
            "disabled": false,
            "index": 2,
            "layout": "IPY_MODEL_7dad9bde5ad942f6a63c5e84034cbb9b",
            "style": "IPY_MODEL_c786b88278154455a49691c10561932b"
          }
        },
        "7dad9bde5ad942f6a63c5e84034cbb9b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "c786b88278154455a49691c10561932b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "119f0e815fa14bcdbf8f7696b37c40f9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DropdownModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DropdownModel",
            "_options_labels": [
              "P Kumar",
              "Z Khan",
              "AA Noffke",
              "JH Kallis",
              "SB Joshi",
              "CL White",
              "B Lee",
              "S Sreesanth",
              "JR Hopes",
              "IK Pathan",
              "K Goel",
              "PP Chawla",
              "WA Mota",
              "GD McGrath",
              "B Geeves",
              "MF Maharoof",
              "R Bhatia",
              "DL Vettori",
              "R Vinay Kumar",
              "B Akhil",
              "AB Dinda",
              "I Sharma",
              "AB Agarkar",
              "M Kartik",
              "Mohammad Hafeez",
              "DJ Hussey",
              "MM Patel",
              "SR Watson",
              "SK Trivedi",
              "SK Warne",
              "D Salunkhe",
              "Pankaj Singh",
              "YK Pathan",
              "Mohammad Asif",
              "VY Mahesh",
              "SM Pollock",
              "A Nehra",
              "DS Kulkarni",
              "Harbhajan Singh",
              "DJ Bravo",
              "VS Yeligati",
              "AM Nayar",
              "MA Khote",
              "Sohail Tanvir",
              "JDP Oram",
              "MS Gony",
              "P Amarnath",
              "M Muralitharan",
              "Joginder Sharma",
              "RP Singh",
              "DNT Zoysa",
              "SB Bangar",
              "Shahid Afridi",
              "PP Ojha",
              "D Kalyankrishna",
              "VRV Singh",
              "Yuvraj Singh",
              "DW Steyn",
              "CRD Fernando",
              "ST Jayasuriya",
              "V Kohli",
              "Gagandeep Singh",
              "Umar Gul",
              "SC Ganguly",
              "LR Shukla",
              "PJ Sangwan",
              "Shoaib Malik",
              "V Sehwag",
              "A Kumble",
              "DP Vijaykumar",
              "SB Styris",
              "RR Raje",
              "JA Morkel",
              "L Balaji",
              "CK Kapugedera",
              "DR Smith",
              "WPUJC Vaas",
              "Y Venugopal Rao",
              "AD Mascarenhas",
              "A Mishra",
              "DJ Thornely",
              "PM Sarvesh Kumar",
              "Abdur Razzak",
              "TM Dilshan",
              "SD Chitnis",
              "M Ntini",
              "RR Powar",
              "SK Raina",
              "BAW Mendis",
              "T Thushara",
              "A Flintoff",
              "Kamran Khan",
              "T Henderson",
              "FH Edwards",
              "Harmeet Singh",
              "KP Pietersen",
              "LRPL Taylor",
              "JD Ryder",
              "Anureet Singh",
              "CH Gayle",
              "RR Bose",
              "YA Abdulla",
              "RS Bopara",
              "SL Malinga",
              "DP Nannes",
              "RG Sharma",
              "Shoaib Ahmed",
              "BJ Hodge",
              "RA Jadeja",
              "RE van der Merwe",
              "KP Appanna",
              "JP Duminy",
              "SR Tendulkar",
              "VS Malik",
              "SM Harwood",
              "AS Raut",
              "D du Preez",
              "RJ Harris",
              "TL Suman",
              "A Singh",
              "M Morkel",
              "LA Carseldine",
              "S Tyagi",
              "SB Jakati",
              "A Mithun",
              "AM Rahane",
              "A Symonds",
              "C Nanda",
              "J Botha",
              "CK Langeveldt",
              "SS Sarkar",
              "AM Salvi",
              "Jaskaran Singh",
              "SW Tait",
              "A Uniyal",
              "AA Jhunjhunwala",
              "AD Mathews",
              "RS Gavaskar",
              "R Ashwin",
              "JM Kemp",
              "S Ladda",
              "SE Bond",
              "SJ Srivastava",
              "Bipul Sharma",
              "Y Nagar",
              "UT Yadav",
              "MC Henriques",
              "R McLaren",
              "J Theron",
              "S Narwal",
              "AC Voges",
              "KAJ Roach",
              "KA Pollard",
              "C Ganapathy",
              "SB Wagh",
              "R Sharma",
              "AN Ahmed",
              "R Sathish",
              "AP Dole",
              "FY Fazal",
              "PD Collingwood",
              "MR Marsh",
              "L Ablish",
              "S Sriram",
              "AB McDonald",
              "DE Bollinger",
              "JD Unadkat",
              "MK Tiwary",
              "ND Doshi",
              "Iqbal Abdulla",
              "AL Menaria",
              "STR Binny",
              "AUK Pathan",
              "AG Murtaza",
              "JEC Franklin",
              "AC Thomas",
              "WD Parnell",
              "M Manhas",
              "DT Christian",
              "DB Ravi Teja",
              "BA Bhatt",
              "JJ van der Wath",
              "S Aravind",
              "R Ninan",
              "Shakib Al Hasan",
              "NLTC Perera",
              "RV Gomez",
              "PC Valthaty",
              "S Nadeem",
              "S Randiv",
              "J Syed Mohammad",
              "NL McCullum",
              "JE Taylor",
              "KMDN Kulasekara",
              "TG Southee",
              "P Parameswaran",
              "S Dhawan",
              "B Kumar",
              "AA Kazi",
              "VR Aaron",
              "P Prasanth",
              "Y Gnaneswara Rao",
              "AA Chavan",
              "RW Price",
              "GJ Maxwell",
              "JP Faulkner",
              "DAJ Bracewell",
              "Ankit Sharma",
              "DJ Harris",
              "TP Sudhindra",
              "SP Narine",
              "HV Patel",
              "KK Cooper",
              "GB Hogg",
              "P Awana",
              "MN Samuels",
              "AD Russell",
              "Azhar Mahmood",
              "A Chandila",
              "P Negi",
              "RJ Peterson",
              "CJ McKay",
              "R Shukla",
              "MJ Clarke",
              "V Pratap Singh",
              "A Ashish Reddy",
              "BW Hilfenhaus",
              "K Upadhyay",
              "Sunny Gupta",
              "MG Johnson",
              "JJ Bumrah",
              "AS Rajpoot",
              "B Laughlin",
              "GH Vihari",
              "Mohammed Shami",
              "BMAJ Mendis",
              "CH Morris",
              "Anand Rajan",
              "AJ Finch",
              "MM Sharma",
              "KV Sharma",
              "SMSM Senanayake",
              "R Rampaul",
              "R Dhawan",
              "JO Holder",
              "IC Pandey",
              "LJ Wright",
              "S Kaul",
              "YS Chahal",
              "KW Richardson",
              "DJG Sammy",
              "Sandeep Sharma",
              "PV Tambe",
              "Parvez Rasool",
              "RN ten Doeschate",
              "MG Neser",
              "NM Coulter-Nile",
              "CJ Anderson",
              "MA Starc",
              "AR Patel",
              "JDS Neesham",
              "M Vijay",
              "SA Yadav",
              "S Badree",
              "R Tewatia",
              "V Shankar",
              "Imran Tahir",
              "Shivam Sharma",
              "S Rana",
              "BE Hendricks",
              "PJ Cummins",
              "K Santokie",
              "S Gopal",
              "Karanveer Singh",
              "DJ Muthuswami",
              "TA Boult",
              "SA Abbott",
              "DJ Hooda",
              "P Suyal",
              "J Suchith",
              "D Wiese",
              "MJ McClenaghan",
              "HH Pandya",
              "RG More",
              "GS Sandhu",
              "M de Lange",
              "J Yadav",
              "Gurkeerat Singh",
              "M Ashwin",
              "JW Hastings",
              "C Munro",
              "Mustafizur Rahman",
              "CR Brathwaite",
              "KJ Abbott",
              "P Sahu",
              "BB Sran",
              "KH Pandya",
              "S Kaushik",
              "T Shamsi",
              "MP Stoinis",
              "Swapnil Singh",
              "SM Boland",
              "CJ Jordan",
              "KC Cariappa",
              "A Zampa",
              "BCJ Cutting",
              "DL Chahar",
              "KS Williamson",
              "Kuldeep Yadav",
              "TS Mills",
              "A Choudhary",
              "TM Head",
              "BA Stokes",
              "CR Woakes",
              "T Natarajan",
              "Rashid Khan",
              "C de Grandhomme",
              "Basil Thampi",
              "AJ Tye",
              "AF Milne",
              "K Rabada",
              "Washington Sundar",
              "SN Thakur",
              "SS Agarwal",
              "NB Singh",
              "Ankit Soni",
              "Mohammad Nabi",
              "Mohammed Siraj",
              "LH Ferguson"
            ],
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "DropdownView",
            "description": "Select Bowler:",
            "description_tooltip": null,
            "disabled": false,
            "index": 39,
            "layout": "IPY_MODEL_cd129be67c614ea68e1317b488a1f54c",
            "style": "IPY_MODEL_c9da89b8374e4cdc950572c4918d71af"
          }
        },
        "cd129be67c614ea68e1317b488a1f54c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "c9da89b8374e4cdc950572c4918d71af": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "f197436c11744ef7811d17a1ba22c77b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ButtonModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ButtonView",
            "button_style": "",
            "description": "Predict Score",
            "disabled": false,
            "icon": "",
            "layout": "IPY_MODEL_1c3a0ab2ef344bae8cf569b5648faf82",
            "style": "IPY_MODEL_c1d60d6e62244dc98465d5f7d2d09359",
            "tooltip": ""
          }
        },
        "1c3a0ab2ef344bae8cf569b5648faf82": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "c1d60d6e62244dc98465d5f7d2d09359": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ButtonStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "button_color": null,
            "font_weight": ""
          }
        },
        "b7bc9652ffa0403dad37ff17e9103258": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_model_name": "OutputModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/output",
            "_view_module_version": "1.0.0",
            "_view_name": "OutputView",
            "layout": "IPY_MODEL_be0f14d04ebc4a1f9b971f3058803463",
            "msg_id": "",
            "outputs": [
              {
                "output_type": "stream",
                "name": "stdout",
                "text": [
                  "\r1/1 [==============================] - ETA: 0s"
                ]
              },
              {
                "output_type": "stream",
                "name": "stdout",
                "text": [
                  "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r1/1 [==============================] - 0s 19ms/step\n"
                ]
              },
              {
                "output_type": "stream",
                "name": "stdout",
                "text": [
                  "169\n"
                ]
              }
            ]
          }
        },
        "be0f14d04ebc4a1f9b971f3058803463": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        }
      }
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "**Importing necessary libraries**"
      ],
      "metadata": {
        "id": "0RH_ELcKAMLN"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "IssIQySv_5lH"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "from sklearn import preprocessing\n",
        "import keras\n",
        "import tensorflow as tf"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Dataset**"
      ],
      "metadata": {
        "id": "BPLAhPLpAdNe"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "ipl = pd.read_csv('dataset/ipl_dataset.csv')\n",
        "ipl.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 397
        },
        "id": "1dMeUjRCAcnj",
        "outputId": "be11ce08-cb04-4e28-ca42-06bcdb7b88ca"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   mid        date                  venue               bat_team  \\\n",
              "0    1  2008-04-18  M Chinnaswamy Stadium  Kolkata Knight Riders   \n",
              "1    1  2008-04-18  M Chinnaswamy Stadium  Kolkata Knight Riders   \n",
              "2    1  2008-04-18  M Chinnaswamy Stadium  Kolkata Knight Riders   \n",
              "3    1  2008-04-18  M Chinnaswamy Stadium  Kolkata Knight Riders   \n",
              "4    1  2008-04-18  M Chinnaswamy Stadium  Kolkata Knight Riders   \n",
              "\n",
              "                     bowl_team      batsman   bowler  runs  wickets  overs  \\\n",
              "0  Royal Challengers Bangalore   SC Ganguly  P Kumar     1        0    0.1   \n",
              "1  Royal Challengers Bangalore  BB McCullum  P Kumar     1        0    0.2   \n",
              "2  Royal Challengers Bangalore  BB McCullum  P Kumar     2        0    0.2   \n",
              "3  Royal Challengers Bangalore  BB McCullum  P Kumar     2        0    0.3   \n",
              "4  Royal Challengers Bangalore  BB McCullum  P Kumar     2        0    0.4   \n",
              "\n",
              "   runs_last_5  wickets_last_5  striker  non-striker  total  \n",
              "0            1               0        0            0    222  \n",
              "1            1               0        0            0    222  \n",
              "2            2               0        0            0    222  \n",
              "3            2               0        0            0    222  \n",
              "4            2               0        0            0    222  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-bd5f04e7-72be-4f7a-91fd-0c0d41d4aea8\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>mid</th>\n",
              "      <th>date</th>\n",
              "      <th>venue</th>\n",
              "      <th>bat_team</th>\n",
              "      <th>bowl_team</th>\n",
              "      <th>batsman</th>\n",
              "      <th>bowler</th>\n",
              "      <th>runs</th>\n",
              "      <th>wickets</th>\n",
              "      <th>overs</th>\n",
              "      <th>runs_last_5</th>\n",
              "      <th>wickets_last_5</th>\n",
              "      <th>striker</th>\n",
              "      <th>non-striker</th>\n",
              "      <th>total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>2008-04-18</td>\n",
              "      <td>M Chinnaswamy Stadium</td>\n",
              "      <td>Kolkata Knight Riders</td>\n",
              "      <td>Royal Challengers Bangalore</td>\n",
              "      <td>SC Ganguly</td>\n",
              "      <td>P Kumar</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>222</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>2008-04-18</td>\n",
              "      <td>M Chinnaswamy Stadium</td>\n",
              "      <td>Kolkata Knight Riders</td>\n",
              "      <td>Royal Challengers Bangalore</td>\n",
              "      <td>BB McCullum</td>\n",
              "      <td>P Kumar</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>222</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1</td>\n",
              "      <td>2008-04-18</td>\n",
              "      <td>M Chinnaswamy Stadium</td>\n",
              "      <td>Kolkata Knight Riders</td>\n",
              "      <td>Royal Challengers Bangalore</td>\n",
              "      <td>BB McCullum</td>\n",
              "      <td>P Kumar</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>222</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "      <td>2008-04-18</td>\n",
              "      <td>M Chinnaswamy Stadium</td>\n",
              "      <td>Kolkata Knight Riders</td>\n",
              "      <td>Royal Challengers Bangalore</td>\n",
              "      <td>BB McCullum</td>\n",
              "      <td>P Kumar</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>222</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>2008-04-18</td>\n",
              "      <td>M Chinnaswamy Stadium</td>\n",
              "      <td>Kolkata Knight Riders</td>\n",
              "      <td>Royal Challengers Bangalore</td>\n",
              "      <td>BB McCullum</td>\n",
              "      <td>P Kumar</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>222</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bd5f04e7-72be-4f7a-91fd-0c0d41d4aea8')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-bd5f04e7-72be-4f7a-91fd-0c0d41d4aea8 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-bd5f04e7-72be-4f7a-91fd-0c0d41d4aea8');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f3c1ccd2-23e0-4cf8-8e06-d19003444027\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f3c1ccd2-23e0-4cf8-8e06-d19003444027')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f3c1ccd2-23e0-4cf8-8e06-d19003444027 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "ipl",
              "summary": "{\n  \"name\": \"ipl\",\n  \"rows\": 76014,\n  \"fields\": [\n    {\n      \"column\": \"mid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 178,\n        \"min\": 1,\n        \"max\": 617,\n        \"num_unique_values\": 617,\n        \"samples\": [\n          50,\n          582,\n          83\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 442,\n        \"samples\": [\n          \"2014-05-02\",\n          \"2012-05-15\",\n          \"2009-05-18\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"venue\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 35,\n        \"samples\": [\n          \"Shaheed Veer Narayan Singh International Stadium\",\n          \"Buffalo Park\",\n          \"Dr. Y.S. Rajasekhara Reddy ACA-VDCA Cricket Stadium\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"bat_team\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"Pune Warriors\",\n          \"Rising Pune Supergiants\",\n          \"Kolkata Knight Riders\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"bowl_team\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"Kochi Tuskers Kerala\",\n          \"Rising Pune Supergiants\",\n          \"Royal Challengers Bangalore\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"batsman\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 411,\n        \"samples\": [\n          \"A Nehra\",\n          \"A Symonds\",\n          \"DJ Bravo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"bowler\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 329,\n        \"samples\": [\n          \"IK Pathan\",\n          \"AB McDonald\",\n          \"JM Kemp\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"runs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 48,\n        \"min\": 0,\n        \"max\": 263,\n        \"num_unique_values\": 252,\n        \"samples\": [\n          106,\n          21,\n          97\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wickets\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 10,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          5,\n          0,\n          9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"overs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.772586873852113,\n        \"min\": 0.0,\n        \"max\": 19.6,\n        \"num_unique_values\": 140,\n        \"samples\": [\n          17.6,\n          11.1,\n          5.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"runs_last_5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14,\n        \"min\": 0,\n        \"max\": 113,\n        \"num_unique_values\": 102,\n        \"samples\": [\n          37,\n          18,\n          74\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wickets_last_5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 7,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1,\n          5,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"striker\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20,\n        \"min\": 0,\n        \"max\": 175,\n        \"num_unique_values\": 155,\n        \"samples\": [\n          95,\n          160,\n          80\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"non-striker\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10,\n        \"min\": 0,\n        \"max\": 109,\n        \"num_unique_values\": 88,\n        \"samples\": [\n          69,\n          0,\n          18\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29,\n        \"min\": 67,\n        \"max\": 263,\n        \"num_unique_values\": 138,\n        \"samples\": [\n          132,\n          115,\n          154\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Dropping Unimportant Features**"
      ],
      "metadata": {
        "id": "QfoNPNtGDyzo"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df = ipl.drop(['date', 'runs', 'wickets', 'overs', 'runs_last_5', 'wickets_last_5','mid', 'striker', 'non-striker'], axis =1)"
      ],
      "metadata": {
        "id": "DotLMW66D4QD"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Further Preprocessing**"
      ],
      "metadata": {
        "id": "I4aDzQRTEEK0"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "X = df.drop(['total'], axis =1)\n",
        "y = df['total']"
      ],
      "metadata": {
        "id": "R8X8g-iVEHXq"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Label Encoding**"
      ],
      "metadata": {
        "id": "9gHk0YqGERqo"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Label Encoding\n",
        "\n",
        "from sklearn.preprocessing import LabelEncoder\n",
        "\n",
        "# Create a LabelEncoder object for each categorical feature\n",
        "venue_encoder = LabelEncoder()\n",
        "batting_team_encoder = LabelEncoder()\n",
        "bowling_team_encoder = LabelEncoder()\n",
        "striker_encoder = LabelEncoder()\n",
        "bowler_encoder = LabelEncoder()\n",
        "\n",
        "# Fit and transform the categorical features with label encoding\n",
        "X['venue'] = venue_encoder.fit_transform(X['venue'])\n",
        "X['bat_team'] = batting_team_encoder.fit_transform(X['bat_team'])\n",
        "X['bowl_team'] = bowling_team_encoder.fit_transform(X['bowl_team'])\n",
        "X['batsman'] = striker_encoder.fit_transform(X['batsman'])\n",
        "X['bowler'] = bowler_encoder.fit_transform(X['bowler'])"
      ],
      "metadata": {
        "id": "2fuZspzbEUy8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Train Test Split**"
      ],
      "metadata": {
        "id": "Rvc5T_MHEcbo"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Train test Split\n",
        "from sklearn.model_selection import train_test_split\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)"
      ],
      "metadata": {
        "id": "_F-rSyNXEgDm"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Feature Scaling**"
      ],
      "metadata": {
        "id": "fwHB6USgEx9a"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import MinMaxScaler\n",
        "\n",
        "scaler = MinMaxScaler()\n",
        "\n",
        "# Fit the scaler on the training data and transform both training and testing data\n",
        "X_train_scaled = scaler.fit_transform(X_train)\n",
        "X_test_scaled = scaler.transform(X_test)"
      ],
      "metadata": {
        "id": "4Xluu11WE1TQ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "\n",
        "*   **Defining Neural Network**\n",
        "\n",
        "Defined a neural network using TensorFlow and Keras for regression.\n",
        "\n",
        "After defining the model, we have compiled the model using the Huber Loss.\n"
      ],
      "metadata": {
        "id": "UePdszoxFD5p"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Define the neural network model\n",
        "model = keras.Sequential([\n",
        "\tkeras.layers.Input( shape=(X_train_scaled.shape[1],)), # Input layer\n",
        "\tkeras.layers.Dense(512, activation='relu'), # Hidden layer with 512 units and ReLU activation\n",
        "\tkeras.layers.Dense(216, activation='relu'), # Hidden layer with 216 units and ReLU activation\n",
        "\tkeras.layers.Dense(1, activation='linear') # Output layer with linear activation for regression\n",
        "])\n",
        "\n",
        "# Compile the model with Huber loss\n",
        "huber_loss = tf.keras.losses.Huber(delta=1.0) # We can adjust the 'delta' parameter as needed\n",
        "model.compile(optimizer='adam', loss=huber_loss) # Use Huber loss for regression"
      ],
      "metadata": {
        "id": "lQmP-6IUFQ1a"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "\n",
        "*   **Model Training**\n"
      ],
      "metadata": {
        "id": "qvRSo4MsFi0r"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Train the model\n",
        "model.fit(X_train_scaled, y_train, epochs=50, batch_size=64, validation_data=(X_test_scaled, y_test))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "saEO9NdkFrls",
        "outputId": "f4951fe2-984a-4acb-9883-edf84ee28b53"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/50\n",
            "832/832 [==============================] - 7s 7ms/step - loss: 32.6915 - val_loss: 22.0929\n",
            "Epoch 2/50\n",
            "832/832 [==============================] - 4s 5ms/step - loss: 22.3835 - val_loss: 22.0045\n",
            "Epoch 3/50\n",
            "832/832 [==============================] - 4s 5ms/step - loss: 22.3152 - val_loss: 21.9773\n",
            "Epoch 4/50\n",
            "832/832 [==============================] - 5s 6ms/step - loss: 22.2861 - val_loss: 21.9316\n",
            "Epoch 5/50\n",
            "832/832 [==============================] - 4s 5ms/step - loss: 22.2709 - val_loss: 21.9211\n",
            "Epoch 6/50\n",
            "832/832 [==============================] - 4s 5ms/step - loss: 22.2372 - val_loss: 21.9342\n",
            "Epoch 7/50\n",
            "832/832 [==============================] - 5s 6ms/step - loss: 22.1628 - val_loss: 22.2140\n",
            "Epoch 8/50\n",
            "832/832 [==============================] - 4s 5ms/step - loss: 22.1615 - val_loss: 21.9050\n",
            "Epoch 9/50\n",
            "832/832 [==============================] - 5s 6ms/step - loss: 22.1327 - val_loss: 21.8238\n",
            "Epoch 10/50\n",
            "832/832 [==============================] - 5s 6ms/step - loss: 22.1821 - val_loss: 22.1500\n",
            "Epoch 11/50\n",
            "832/832 [==============================] - 5s 6ms/step - loss: 22.1194 - val_loss: 21.8221\n",
            "Epoch 12/50\n",
            "832/832 [==============================] - 6s 7ms/step - loss: 22.1468 - val_loss: 21.8021\n",
            "Epoch 13/50\n",
            "832/832 [==============================] - 4s 5ms/step - loss: 22.1004 - val_loss: 21.7842\n",
            "Epoch 14/50\n",
            "832/832 [==============================] - 4s 5ms/step - loss: 22.0830 - val_loss: 21.9914\n",
            "Epoch 15/50\n",
            "832/832 [==============================] - 6s 7ms/step - loss: 22.0555 - val_loss: 21.8790\n",
            "Epoch 16/50\n",
            "832/832 [==============================] - 4s 5ms/step - loss: 22.1017 - val_loss: 21.7356\n",
            "Epoch 17/50\n",
            "832/832 [==============================] - 4s 5ms/step - loss: 22.0279 - val_loss: 21.7040\n",
            "Epoch 18/50\n",
            "832/832 [==============================] - 5s 7ms/step - loss: 21.9248 - val_loss: 22.1558\n",
            "Epoch 19/50\n",
            "832/832 [==============================] - 4s 5ms/step - loss: 21.8551 - val_loss: 21.5157\n",
            "Epoch 20/50\n",
            "832/832 [==============================] - 4s 5ms/step - loss: 21.7708 - val_loss: 21.5231\n",
            "Epoch 21/50\n",
            "832/832 [==============================] - 6s 7ms/step - loss: 21.7419 - val_loss: 22.2254\n",
            "Epoch 22/50\n",
            "832/832 [==============================] - 4s 5ms/step - loss: 21.7022 - val_loss: 21.3752\n",
            "Epoch 23/50\n",
            "832/832 [==============================] - 10s 12ms/step - loss: 21.6472 - val_loss: 21.4972\n",
            "Epoch 24/50\n",
            "832/832 [==============================] - 5s 6ms/step - loss: 21.6500 - val_loss: 21.3062\n",
            "Epoch 25/50\n",
            "832/832 [==============================] - 4s 5ms/step - loss: 21.5958 - val_loss: 21.2831\n",
            "Epoch 26/50\n",
            "832/832 [==============================] - 6s 7ms/step - loss: 21.5612 - val_loss: 21.4302\n",
            "Epoch 27/50\n",
            "832/832 [==============================] - 4s 5ms/step - loss: 21.5106 - val_loss: 21.2351\n",
            "Epoch 28/50\n",
            "832/832 [==============================] - 4s 5ms/step - loss: 21.4872 - val_loss: 21.1331\n",
            "Epoch 29/50\n",
            "832/832 [==============================] - 6s 7ms/step - loss: 21.4395 - val_loss: 21.1362\n",
            "Epoch 30/50\n",
            "832/832 [==============================] - 4s 5ms/step - loss: 21.3711 - val_loss: 22.1281\n",
            "Epoch 31/50\n",
            "832/832 [==============================] - 4s 5ms/step - loss: 21.3459 - val_loss: 21.1117\n",
            "Epoch 32/50\n",
            "832/832 [==============================] - 6s 7ms/step - loss: 21.2921 - val_loss: 21.0481\n",
            "Epoch 33/50\n",
            "832/832 [==============================] - 4s 5ms/step - loss: 21.2511 - val_loss: 20.9892\n",
            "Epoch 34/50\n",
            "832/832 [==============================] - 4s 5ms/step - loss: 21.1238 - val_loss: 20.9673\n",
            "Epoch 35/50\n",
            "832/832 [==============================] - 6s 7ms/step - loss: 21.0471 - val_loss: 21.2256\n",
            "Epoch 36/50\n",
            "832/832 [==============================] - 4s 5ms/step - loss: 20.9720 - val_loss: 20.8308\n",
            "Epoch 37/50\n",
            "832/832 [==============================] - 4s 5ms/step - loss: 20.8700 - val_loss: 20.5699\n",
            "Epoch 38/50\n",
            "832/832 [==============================] - 5s 7ms/step - loss: 20.7805 - val_loss: 20.8844\n",
            "Epoch 39/50\n",
            "832/832 [==============================] - 4s 5ms/step - loss: 20.6812 - val_loss: 20.5451\n",
            "Epoch 40/50\n",
            "832/832 [==============================] - 4s 5ms/step - loss: 20.6129 - val_loss: 20.3535\n",
            "Epoch 41/50\n",
            "832/832 [==============================] - 6s 7ms/step - loss: 20.4941 - val_loss: 20.3197\n",
            "Epoch 42/50\n",
            "832/832 [==============================] - 4s 5ms/step - loss: 20.4025 - val_loss: 20.1339\n",
            "Epoch 43/50\n",
            "832/832 [==============================] - 5s 6ms/step - loss: 20.2900 - val_loss: 20.0493\n",
            "Epoch 44/50\n",
            "832/832 [==============================] - 4s 5ms/step - loss: 20.2108 - val_loss: 20.1554\n",
            "Epoch 45/50\n",
            "832/832 [==============================] - 4s 5ms/step - loss: 20.0793 - val_loss: 19.9412\n",
            "Epoch 46/50\n",
            "832/832 [==============================] - 5s 6ms/step - loss: 20.0191 - val_loss: 19.7105\n",
            "Epoch 47/50\n",
            "832/832 [==============================] - 5s 5ms/step - loss: 19.8866 - val_loss: 19.7099\n",
            "Epoch 48/50\n",
            "832/832 [==============================] - 4s 5ms/step - loss: 19.8039 - val_loss: 19.8091\n",
            "Epoch 49/50\n",
            "832/832 [==============================] - 9s 10ms/step - loss: 19.7465 - val_loss: 19.4462\n",
            "Epoch 50/50\n",
            "832/832 [==============================] - 4s 5ms/step - loss: 19.6372 - val_loss: 19.5267\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.src.callbacks.History at 0x7e04aeba16f0>"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model_losses = pd.DataFrame(model.history.history)\n",
        "model_losses.plot()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 447
        },
        "id": "BAvXnxstGoMj",
        "outputId": "0c3200a9-9096-48c1-91ef-6cccb57d1cbe"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: >"
            ]
          },
          "metadata": {},
          "execution_count": 11
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "\n",
        "*   **Model Evaluation**\n"
      ],
      "metadata": {
        "id": "3M0-z40vGtbW"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Make predictions\n",
        "predictions = model.predict(X_test_scaled)\n",
        "\n",
        "from sklearn.metrics import mean_absolute_error,mean_squared_error\n",
        "mean_absolute_error(y_test,predictions)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Al5TFw4DGyau",
        "outputId": "25c6748e-2fcb-4a8b-9055-1d48073e7802"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "713/713 [==============================] - 1s 2ms/step\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "20.019236188979296"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Creating Interactive Widget**\n",
        "* Created an interactive widget using ipywidgets to predict the score based on user input for venue, batting team, bowling team, striker, and bowler.\n",
        "* Created dropdown widgets to select values for venue, batting team, bowling team, striker, and bowler.\n",
        "* Then, added a “Predicted Score” button widget. Whenever, the button will be clicked, the predict_score function will be called and then perform the following steps:\n",
        " * Decodes the user-selected values to their original categorical values.\n",
        " * Encodes and scales these values to match the format used in model training.\n",
        " * Uses the trained model to make a prediction based on the user’s input.\n",
        " * Displays the predicted score."
      ],
      "metadata": {
        "id": "mAjkwX9FG9Ey"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import ipywidgets as widgets\n",
        "from IPython.display import display, clear_output\n",
        "\n",
        "import warnings\n",
        "warnings.filterwarnings(\"ignore\")\n",
        "\n",
        "venue = widgets.Dropdown(options=df['venue'].unique().tolist(),description='Select Venue:')\n",
        "batting_team = widgets.Dropdown(options =df['bat_team'].unique().tolist(), description='Select Batting Team:')\n",
        "bowling_team = widgets.Dropdown(options=df['bowl_team'].unique().tolist(), description='Select Bowling Team:')\n",
        "striker = widgets.Dropdown(options=df['batsman'].unique().tolist(), description='Select Striker:')\n",
        "bowler = widgets.Dropdown(options=df['bowler'].unique().tolist(), description='Select Bowler:')\n",
        "\n",
        "predict_button = widgets.Button(description=\"Predict Score\")\n",
        "\n",
        "def predict_score(b):\n",
        "\twith output:\n",
        "\t\tclear_output() # Clear the previous output\n",
        "\n",
        "\n",
        "\t\t# Decode the encoded values back to their original values\n",
        "\t\tdecoded_venue = venue_encoder.transform([venue.value])\n",
        "\t\tdecoded_batting_team = batting_team_encoder.transform([batting_team.value])\n",
        "\t\tdecoded_bowling_team = bowling_team_encoder.transform([bowling_team.value])\n",
        "\t\tdecoded_striker = striker_encoder.transform([striker.value])\n",
        "\t\tdecoded_bowler = bowler_encoder.transform([bowler.value])\n",
        "\n",
        "\n",
        "\t\tinput = np.array([decoded_venue, decoded_batting_team, decoded_bowling_team,decoded_striker, decoded_bowler])\n",
        "\t\tinput = input.reshape(1,5)\n",
        "\t\tinput = scaler.transform(input)\n",
        "\t\t#print(input)\n",
        "\t\tpredicted_score = model.predict(input)\n",
        "\t\tpredicted_score = int(predicted_score[0,0])\n",
        "\n",
        "\t\tprint(predicted_score)"
      ],
      "metadata": {
        "id": "rfYQt9GrHrmf"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "predict_button.on_click(predict_score)\n",
        "output = widgets.Output()\n",
        "display(venue, batting_team, bowling_team, striker, bowler, predict_button, output)"
      ],
      "metadata": {
        "id": "3dmx_z4QHyKr",
        "outputId": "97fc2497-b925-4f0b-e62c-1ece43004059",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 253,
          "referenced_widgets": [
            "1313a5bc6bba4ae988cedda5796d703b",
            "4120b502061547bba4ace2d22da7bc0a",
            "1b85dc29ba2d4f2892d822d9e7378d2d",
            "4b4be5467e0c4561911b98b14c253ce0",
            "3290d94bcc1445b2a7dcabe16c1a0165",
            "27779fdfa8c949d3ba9b05b50f9df86c",
            "8248ddc34f41481ebd7ece25313f31c4",
            "c8dfd4d477b3448c9226c621ef927e33",
            "784e968aa7914b258c55e9e96602f1a3",
            "f70da900228c4c6981280fe352b2acd0",
            "7dad9bde5ad942f6a63c5e84034cbb9b",
            "c786b88278154455a49691c10561932b",
            "119f0e815fa14bcdbf8f7696b37c40f9",
            "cd129be67c614ea68e1317b488a1f54c",
            "c9da89b8374e4cdc950572c4918d71af",
            "f197436c11744ef7811d17a1ba22c77b",
            "1c3a0ab2ef344bae8cf569b5648faf82",
            "c1d60d6e62244dc98465d5f7d2d09359",
            "b7bc9652ffa0403dad37ff17e9103258",
            "be0f14d04ebc4a1f9b971f3058803463"
          ]
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Dropdown(description='Select Venue:', options=('M Chinnaswamy Stadium', 'Punjab Cricket Association Stadium, M…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "1313a5bc6bba4ae988cedda5796d703b"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Dropdown(description='Select Batting Team:', options=('Kolkata Knight Riders', 'Chennai Super Kings', 'Rajasth…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "4b4be5467e0c4561911b98b14c253ce0"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Dropdown(description='Select Bowling Team:', options=('Royal Challengers Bangalore', 'Kings XI Punjab', 'Delhi…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "8248ddc34f41481ebd7ece25313f31c4"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Dropdown(description='Select Striker:', options=('SC Ganguly', 'BB McCullum', 'RT Ponting', 'DJ Hussey', 'Moha…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "f70da900228c4c6981280fe352b2acd0"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Dropdown(description='Select Bowler:', options=('P Kumar', 'Z Khan', 'AA Noffke', 'JH Kallis', 'SB Joshi', 'CL…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "119f0e815fa14bcdbf8f7696b37c40f9"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Button(description='Predict Score', style=ButtonStyle())"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "f197436c11744ef7811d17a1ba22c77b"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Output()"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "b7bc9652ffa0403dad37ff17e9103258"
            }
          },
          "metadata": {}
        }
      ]
    }
  ]
}
